JMX_PORT=9997 bin/kafka-server-start.sh config/server.properties >/dev/null 2>&1 &
部署新节点，然后通过命令启动kafka，JMX_PORT是为了打开kafka的可管理端口（默认不启用）

install 10.25.23.101--10.25.23.105 zk 10.25.23.113
修改server.properties
broker.id
port
host.name
zookeeper.connect

JMX_PORT=9997 bin/kafka-server-start.sh config/server.properties &

启动：
/usr/local/kafka_2.11-0.8.2.2/bin/kafka-server-start.sh /usr/local/kafka_2.11-0.8.2.2/config/server.properties &

停止：
/usr/local/kafka_2.11-0.8.2.2/bin/kafka-server-stop.sh /usr/local/kafka_2.11-0.8.2.2/config/server.properties

显示主题列表
/usr/local/kafka_2.11-0.8.2.2/bin/kafka-topics.sh --list --zookeeper 10.25.23.113:2181/kafka-trace

显示主题信息
/usr/local/kafka_2.11-0.8.2.2/bin/kafka-topics.sh --describe --zookeeper 10.25.23.113:2181 --topic TRACE-TOPIC

删除主题（server.properties的delete.topic.enable设置为true才有效）
/usr/local/kafka_2.11-0.8.2.2/bin/kafka-topics.sh --zookeeper 10.25.23.113:2181 --delete --topic logsT

创建主题
/usr/local/kafka_2.11-0.8.2.2/bin/kafka-topics.sh --zookeeper 10.25.23.113:2181,10.25.23.114:2181,10.25.23.115:2181,10.25.23.116:2181,10.25.23.117:2181 --create --partitions 3 --replication-factor 3 --topic test

消费消息者
/usr/local/kafka_2.11-0.8.2.2/bin/kafka-console-consumer.sh --zookeeper 10.25.23.113:2181/kafka-trace --from-beginning --topic logsT

创建生产者
/usr/local/kafka_2.11-0.8.2.2/bin/kafka-console-producer.sh --broker-list 10.25.23.101:9092,10.25.23.102:9092,10.25.23.103:9092,10.25.23.104:9092,10.25.23.105:9092 --topic logsT


[2016-03-01 17:40:06,936] ERROR Closing socket for /10.25.35.18 because of error (kafka.network.Processor)
java.io.IOException: Connection reset by peer
        at sun.nio.ch.FileDispatcherImpl.read0(Native Method)
        at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:39)
        at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
        at sun.nio.ch.IOUtil.read(IOUtil.java:197)
        at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
        at kafka.utils.Utils$.read(Utils.scala:380)
        at kafka.network.BoundedByteBufferReceive.readFrom(BoundedByteBufferReceive.scala:54)
        at kafka.network.Processor.read(SocketServer.scala:444)
        at kafka.network.Processor.run(SocketServer.scala:340)
        at java.lang.Thread.run(Thread.java:745)

kafka ui
kafka-manager：
首先安装sbt（scala的打包构建工具）：
wget https://dl.bintray.com/sbt/native-packages/sbt/0.13.11/sbt-0.13.11.tgz
tar zxvf sbt-0.13.11.tgz -C /usr/local
cd /usr/local/sbt
配置环境变量：
vi /etc/profile
export PATH=/usr/local/sbt/bin:$PATH
测试sbt是否安装成功：
sbt -version
显示：
Getting org.scala-sbt sbt 0.13.11 ...
说明安装成功。

安装kafka-manager：
wget https://github.com/yahoo/kafka-manager/archive/1.3.0.4.zip
unzip 1.3.0.4.zip
mv kafka-manager-1.3.0.4/ /usr/local/
修改配置文件：
vi /usr/local/kafka-manager-1.3.0.4/conf/application.conf 
修改：
kafka-manager.zkhosts="10.25.23.113:2181"
保存。
在/usr/local/kafka-manager-1.3.0.4/下执行：
cd /usr/local/kafka-manager-1.3.0.4/
sbt clean dist   #这个命令可以创建一个zip文件用来部署应用。
命令执行成功后会生成一个文件：
/usr/local/kafka-manager-1.3.0.4/target/universal/kafka-manager-1.3.0.4.zip
unzip /usr/local/kafka-manager-1.3.0.4/target/universal/kafka-manager-1.3.0.4.zip
mv kafka-manager-1.3.0.4 /usr/local/kafka-manager-1.3.0.4-run
cd /usr/local/kafka-manager-1.3.0.4-run
bin/kafka-manager  #使用默认端口：9000
bin/kafka-manager -Dconfig.file=/path/to/application.conf -Dhttp.port=8080 #可以修改端口
bin/kafka-manager -java-home /usr/local/oracle-java-8 #可以修改java
打开浏览器：
http://10.25.23.106:9000/
可以出现kafka管理页面。
在管理界面的cluster下拉框下选择“Add Cluster”。然后填写cluster name：kafka-test
Cluster Zookeeper Hosts：10.25.23.113:2181/kafka-trace
选择Kafka Version的版本为：0.8.2.2
JMX Auth Username：kafka-test
JMX Auth Password：kafka-test
然后保存。
刷新：http://10.25.23.106:9000/就可以看到刚才添加的kafka cluster了。点击进入就可以查看详情。
