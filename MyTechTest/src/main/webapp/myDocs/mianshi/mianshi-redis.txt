1、mySQL里有2000w数据，redis中只存20w的数据，如何保证redis中的数据都是热点数据
相关知识：redis 内存数据集大小上升到一定大小的时候，就会施行数据淘汰策略。redis 提供 6种数据淘汰策略：
volatile-lru：从已设置过期时间的数据集（server.db[i].expires）中挑选最近最少使用的数据淘汰
volatile-ttl：从已设置过期时间的数据集（server.db[i].expires）中挑选将要过期的数据淘汰
volatile-random：从已设置过期时间的数据集（server.db[i].expires）中任意选择数据淘汰
allkeys-lru：从数据集（server.db[i].dict）中挑选最近最少使用的数据淘汰
allkeys-random：从数据集（server.db[i].dict）中任意选择数据淘汰
no-enviction（驱逐）：禁止驱逐数据

2、秒杀
秒杀商品5件，如何做。
基于服务器内存设置一个ConcurrentLinkedQueue，长度不限，当queue长度>=5之后进来的请求抛秒杀结束的静态页面。这样，会有5 * N个请求（N代表服务器数量），能将商品加入购物车。
然后进入结算的时候锁库存（这时候可以是锁redis），锁定库存的秒杀成功，锁定不了的抛秒杀失败信息。
进一步优化：
例如：服务器有20台，秒杀商品有100件。上述算法可能有20 * 100个人能进入支付页面。那么在秒杀商品较多时可以将queue的阀值适当减少，比如queue的长度=秒杀商品件数 * 1.2 / 服务器台数
即：100 * 1.2 / 20 = 6（queue的阀值为6）
   5 * 1.2 /20 = 0.3 =1 (小数部分直接向上升级，queue的长度阀值为1）
   如果有机器人，相同userid只能秒杀1件，甚至一件不给