BSD(Berkeley Software Distribution):伯克利软件发布
NFS(Network File System)：网络文件系统

在/proc目录下有正在活动的进程id对应的目录：/proc/pid
例如：/proc/234 说明有一进程的id号为：234，这个目录里面存放了这个进程的信息

给防火墙开端口：
iptables -I INPUT -p tcp --dport 6379 -j ACCEPT

shell编程：
一、位置参数：
$0：程序名称
$1--$n：传递给程序的参数

二、内部参数：
$0：必需的
$0--$n：非必需的
$#：传递给程序的总的参数数目
$?：上一个代码或程序在shell中退出的情况。如果正常退出则为0，否则为非0值。
$*：传递给程序的所有参数组成的字符串。


查看linux版本：
cat /proc/version

ssh登录远程机器：
ssh username@ipaddr
然后需要输入密码，即可登录。
例如：
[root@SSAVL2438 wechatroot]# ssh root@10.91.230.232
root@10.91.230.232's password:    #在此处输入密码：Root1q2w
Last login: Mon Jun 1 09:08:19 2015 from 10.91.230.234
[root@SSAVL2436 ~]#

将远程文件夹拷贝到本地：
#将远程username@remoteIpAddr:/remotedir0/remotedirdir1文件夹拷贝到本地文件夹/localdir0/下。
scp -r username@remoteIpAddr:/remotedir0/remotedirdir1 /localdir0/ 
例如：scp -r root@10.91.230.232:/wechatroot/WechatManageServer /wechatroot #拷贝到本地文件夹/wechatroot下

将远程文件拷贝到本地：
scp -r username@remoteIpAddr:/remotedir/remotefilename /localdir/

linux运行级别：
运行级别0：系统停机状态，系统默认运行级别不能设为0，否则不能正常启动
运行级别1：单用户工作状态，root权限，用于系统维护，禁止远程登陆
运行级别2：多用户状态(没有NFS)
运行级别3：完全的多用户状态(有NFS)，登陆后进入控制台命令行模式
运行级别4：系统未使用，保留
运行级别5：X11控制台，登陆后进入图形GUI模式
运行级别6：系统正常关闭并重启，默认运行级别不能设为6，否则不能正常启动

运行级别的原理：
1。在目录/etc/rc.d/init.d下有许多服务器脚本程序，一般称为服务(service)
2。在/etc/rc.d下有7个名为rcN.d的目录，对应系统的7个运行级别
3。rcN.d目录下都是一些符号链接文件，这些链接文件都指向init.d目录下的service脚本文件，命名规则为K+nn+服务名或S+nn+服务名，其中nn为两位数字。
4。系统会根据指定的运行级别进入对应的rcN.d目录，并按照文件名顺序检索目录下的链接文件
     对于以K开头的文件，系统将终止对应的服务
     对于以S开头的文件，系统将启动对应的服务
5。查看运行级别用：runlevel
6。进入其它运行级别用：init N
7。另外init0为关机，init 6为重启系统

定时任务crontab:
首先查看crond是否启动：service crond status

命令形式：
c r o n t a b命令的一般形式为：
Crontab [-u user] -e -l -r
其中：
-u 用户名。
-e 编辑c r o n t a b文件。
-l 列出c r o n t a b文件中的内容。
-r 删除c r o n t a b文件。
如果使用自己的名字登录，就不用使用- u选项，因为在执行c r o n t a b命令时，该命令能够知道当前的用户

为了能够在特定的时间运行作业，需要了解c r o n t a b文件每个条目中各个域的意义和格式。
下面就是这些域：
第1列分钟1～59
第2列小时1～23（0表示子夜）
第3列日1～31
第4列月1～12
第5列星期0～6（0表示星期天）
第6列要运行的命令
例如：
30 * * * * /usr/local/test.sh #每30分钟执行一次脚本



bash中 2>&1 & 的解释
1、首先，bash中0，1，2三个数字分别代表STDIN_FILENO、STDOUT_FILENO、STDERR_FILENO，即标准输入（一般是键盘），标准输出（一般是显示屏，准确的说是用户终端控制台），标准错误（出错信息输出）。
2、输入输出可以重定向，所谓重定向输入就是在命令中指定具体的输入来源，譬如 cat < test.c 将test.c重定向为cat命令的输入源。输出重定向是指定具体的输出目标以替换默认的标准输出，譬如ls > 1.txt将ls的结果从标准输出重定向为1.txt文本。有时候会看到如 ls >> 1.txt这类的写法，> 和 >> 的区别在于：> 用于新建而>>用于追加。即ls > 1.txt会新建一个1.txt文件并且将ls的内容输出到新建的1.txt中，而ls >> 1.txt则用在1.txt已经存在，而我们只是想将ls的内容追加到1.txt文本中的时候。
3、默认输入只有一个（0，STDIN_FILENO），而默认输出有两个（标准输出1 STDOUT_FILENO，标准错误2 STDERR_FILENO）。因此默认情况下，shell输出的错误信息会被输出到2，而普通输出信息会输出到1。但是某些情况下，我们希望在一个终端下看到所有的信息（包括标准输出信息和错误信息），要怎么办呢？
       对了，你可以使用我们上面讲到的输出重定向。思路有了，怎么写呢？ 非常直观的想法就是2>1（将2重定向到1嘛），行不行呢？试一试就知道了。我们进行以下测试步骤：
1）mkdir test && cd test                ; 创建test文件夹并进入test目录
2）touch a.txt b.c c                          ; 创建a.txt b.c c 三个文件
3）ls > 1                                           ; 按我们的猜测，这句应该是将ls的结果重定向到标准输出，因此效果和直接ls应该一样。但是实际这句执行后，标准输出中并没有任何信息。
4）ls                                                  ; 执行3之后再次ls，则会看到test文件夹中多了一个文件1
5）cat 1                                            ; 查看文件1的内容，实际结果为：1 a.txt b.c c     可见步骤3中 ls > 1并不是将ls的结果重定向为标准输出，而是将结果重定向到了一个文件1中。即1在此处不被解释为STDOUT_FILENO，而是文件1。
4、到了此时，你应该也能猜到2>&1的用意了。不错，2>&1就是用来将标准错误2重定向到标准输出1中的。此处1前面的&就是为了让bash将1解释成标准输出而不是文件1。至于最后一个&，则是让bash在后台执行。

网络：
1、eth0、eth1：
eth0代表网卡一、eth1代表网卡二
2、lo代表127.0.0.1即localhost
3、网关：
网关(Gateway)又称网间连接器、协议转换器。网关在网络层以上实现网络互连，是最复杂的网络互连设备，仅用于两个高层协议不同的网络互连。
网关实质上是一个网络通向其他网络的IP地址。比如有网络A和网络B，网络A的IP地址范围为“192.168.1.1~192. 168.1.254”，子网掩码为255.255.255.0；
网络B的IP地址范围为“192.168.2.1~192.168.2.254”，子网掩码为255.255.255.0。在没有路由器的情况下，两个网络之间是不能进行TCP/IP通信的，
即使是两个网络连接在同一台交换机（或集线器）上，TCP/IP协议也会根据子网掩码（255.255.255.0）判定两个网络中的主机处在不同的网络里。
而要实现这两个网络之间的通信，则必须通过网关。如果网络A中的主机发现数据包的目的主机不在本地网络中，就把数据包转发给它自己的网关，再由网关转发给网络B的网关，网络B的网关再转发给网络B的某个主机。
4、子网 掩码：
子网掩码不能单独存在，它必须结合IP地址一起使用。子网掩码只有一个作用，就是将某个IP地址划分成网络地址和主机地址两部分。  
子网掩码的设定必须遵循一定的规则。与IP地址相同，子网掩码的长度也是32位，左边是网络位，用二进制数字“1”表示；右边是主机位，用二进制数字“0”表示。
只有通过子网掩码，才能表明一台主机所在的子网与其他子网的关系，使网络正常工作。
5、ip地址：
互联网上联接了无数的服务和电脑，但它们并不是处于杂乱无章的无序状态，而是每一个主机都有惟一的地址，作为该主机在Internet上的唯一标志。我们称为IP地址（Internet Protocol Address）。
它是一串4组由圆点分割的数字组成的，其中每一组数字都在0－256之间，如：0－255．0－255．0－255．0－255．0－255；如，202．202．96．33就是一个主机服务器的IP地址。

route命令：
用于显示和操作ip路由表。