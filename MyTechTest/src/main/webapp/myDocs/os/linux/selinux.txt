参考：https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/SELinux_Users_and_Administrators_Guide/chap-Security-Enhanced_Linux-Introduction.html
     http://www.cnblogs.com/yang-wu/p/5109843.html
     
discretionary access control（DAC）：自主访问控制
Mandatory Access Control（MAC）：强制访问控制
Access Vector Cache (AVC)：访问向量缓存
Berkeley Internet Name Domain（BIND）

运行selinux的好处：
1、所有的进程（process）和文件（file）都被标记为一个类型（type）。类型（type）定义了一个进程的域（domain），一个文件的类型（type）。进程相互独立的运行在各自的域中，
selinux策略规则定义了进程和文件以及进程和进程之间如何互动。只有selinux策略规则存在并允许他们才能访问。
2、细粒度访问控制。跨越了传统的unix权限控制：用户自由裁量控制和基于linux用户以及组id。selinux访问控制基于所有合法信息：  例如：selinux用户，角色，类型，以及一个可选的level。
3、selinux策略是行政规定，强制为系统级别的，不是有用户决定的。
4、减少特权升级攻击的脆弱性。进程运行在域中，因此彼此隔离。selinux策略规则定义了进程访问文件和其他进程的方式。如果一个进程被攻破，攻击者只能访问该进程的正常功能以及被配置为有权访问的文件。
例如：如果apache http server被攻破，攻击者不能用该进程读取位于用户目录下的文件，除非一个指定的selinux策略规则被添加并配置成允许访问。
5、selinux可以用于加强数据的机密性和完整性，以及保护进程来自于不可信的输入。
然而，selinux并非：
1、杀毒软件
2、密码、防火墙以及其他安全系统的替代品
3、一体化安全解决方案

selinux的目的是加强现有的安全解决方案，而不是取代他们。甚至在运行selinux的时候，继续遵循以下的安全实践也是非常重要的：保持软件更新到最新，使用难以猜测的密码，以及防火墙等等。

下面的例子演示了selinux如何增强安全：
1、默认动作是禁止的。 如果一个selinux策略规则不村子允许访问。那么当一个进程打开文件，访问被禁止了。
2、selinux能够限制linux用户。在selinux策略中存在一些受限的selinux用户。linux用户可以被映射到selinux用户以利用安全规则和机制作用于他们。例如：映射一个linux用户到selinux用户：user_u。
结果是linux用户不能运行（除非单独配置了）设置用户id（setuid）的应用，像sudo和su，也阻止了他们在他们的家目录执行文件和应用。如果配置了，就可以防止用户在家目录执行恶意文件。
3、进程隔离。进程运行在自己的域中，防止了进程利用其它进程访问文件，以及防止进程访问其它进程。例如，除非有另外的配置。攻击者攻破了samba服务器，并不能利用samba服务器作为一个攻击向量
来读取被其它进程使用的文件，例如被mariaDB使用的数据库。
4、selinux可以限制由于配置错误造成的损失。域名系统（DNS）服务彼此之间经常复制信息，作为区域转移。攻击者可以利用区域转移用错误的信息更新DNS服务。当运行Berkeley Internet Name Domain (BIND) 
作为一个DNS服务。即使管理员忘了限制哪个服务器可以执行区域转移，默认的selinux策略防止区域文件被区域转移更新，通过绑定为自己和其他进程。


selinux状态与模式：
有两种状态：启用、禁用。如果禁用了那么只有DAC规则起作用。
如果启用了，selinux就处于下列几种模式中的一种：
Enforcing（强制模式）：selinux会基于selinux策略规则拒绝访问。
Enforcing（宽容模式）：selinux不拒绝访问。但是强制模式拒绝访问的动作都会被记录下来。
[root@centos74 sbin]# getenforce
Permissive
[root@centos74 sbin]# setenforce 1
[root@centos74 sbin]# getenforce
Enforcing


selinux主配置文件：/etc/selinux/config
[root@centos74 ~]# more /etc/selinux/config

# This file controls the state of SELinux on the system.
# SELINUX= can take one of these three values:
#     enforcing - SELinux security policy is enforced.
#     permissive - SELinux prints warnings instead of enforcing.
#     disabled - No SELinux policy is loaded.
SELINUX=enforcing
# SELINUXTYPE= can take one of three two values:
#     targeted - Targeted processes are protected,
#     minimum - Modification of targeted policy. Only selected processes are protected. 
#     mls - Multi Level Security protection.
SELINUXTYPE=targeted 

BOOLEANS policy：
booleans允许部分selinux policy在运行是改变。它允许在没有重新加载或重新编译selinux policy的情况下改变，例如允许服务访问NFS卷。

列出booleans：
[root@centos74 ~]# semanage boolean -l
SELinux boolean                State  Default Description

ftp_home_dir                   (off  ,  off)  Allow ftp to home dir
smartmon_3ware                 (off  ,  off)  Allow smartmon to 3ware
mpd_enable_homedirs            (off  ,  off)  Allow mpd to enable homedirs
xdm_sysadm_login               (off  ,  off)  Allow xdm to sysadm login
xen_use_nfs                    (off  ,  off)  Allow xen to use nfs
。。。。。。
例如：
ftp_home_dir                   (off  ,  off)  Allow ftp to home dir
表示阻止FTP守护进程（vsftpd）在家目录读写文件。

配置booleans：
[root@centos74 ~]# getsebool httpd_can_network_connect_db
httpd_can_network_connect_db --> off
[root@centos74 ~]# setsebool httpd_can_network_connect_db on
[root@centos74 ~]# getsebool httpd_can_network_connect_db
httpd_can_network_connect_db --> on
这就临时允许http服务的脚本和模块链接到数据库服务。系统重启后改变不生效，如果要永久改变，需要加 -P参数：
setsebool -P httpd_can_network_connect_db on

selinux context -- labeling files
一个运行selinux的系统，所有的进程和文件都被代表安全相关信息的某种方式所标记。这个信息就被称为selinux context。对文件来说，查看这个上下文使用
ls -Z命令：
[root@centos74 downloads]# ls -Z a.txt 
-rw-r--r--. root root unconfined_u:object_r:admin_home_t:s0 a.txt
这个例子中，selinux提供了一个用户（unconfined_u），一个角色（object_r），一个类型（admin_home_t）和一个水平（s0）。这个信息用于访问控制决策。
在DAC系统里，访问控制基于用户和组ID。selinux policy rule在DAC规则之后检查。如果DAC拒绝访问那么selinux policy rule不会被使用。
注意：默认情况下，新创建的文件和目录继承它们父目录的selinux类型。例如，当在一个用etc_t类型标记的/etc/目录下创建一个新文件，这个新文件也会继承相同的类型：
[root@centos74 downloads]# ls -dZ /etc
drwxr-xr-x. root root system_u:object_r:etc_t:s0       /etc
[root@centos74 downloads]# touch /etc/newfile
[root@centos74 downloads]# ls -Z /etc/newfile
-rw-r--r--. root root unconfined_u:object_r:etc_t:s0   /etc/newfile

临时改变：chcon
chcon命令改变文件的selinux context。
chcon -t type file-name改变文件的类型，type是一个selinux type，例如：httpd_sys_content_t，file-name是一个文件或目录。
[root@centos74 downloads]# ls -Z a.txt 
-rw-r--r--. root root unconfined_u:object_r:admin_home_t:s0 a.txt
[root@centos74 downloads]# chcon -t httpd_sys_content_t a.txt
[root@centos74 downloads]# ls -Z a.txt
-rw-r--r--. root root unconfined_u:object_r:httpd_sys_content_t:s0 a.txt
restorecon -v file-name命令恢复原来的selinux类型。 -v选项可以看到什么被改变。
[root@centos74 downloads]# restorecon -v a.txt
restorecon reset /root/downloads/a.txt context unconfined_u:object_r:httpd_sys_content_t:s0->unconfined_u:object_r:admin_home_t:s0
restorecon命令读取/etc/selinux/targeted/contexts/files/目录中的文件，看文件应该拥有哪种selinux context。

永久改变：semanage fcontext
semanage fcontext命令用于改变文件的selinux context。当使用target policy的时候，改变被写入/etc/selinux/targeted/contexts/files/目录下的文件中：
file_contexts文件指定了许多文件的默认context，以及通过semanage fcontext更新的context。
file_contexts.local文件存储了新创建的文件以及在file_contexts文件中没有找到的目录的context。

semanage fcontext -a options file-name|directory-name
记住请使用全路径，以避免给错误的文件贴标签。

改变一个目录和它的内容的类型：
mkdir /web
touch /web/file{1,2,3}
ls -dZ /web
ls -lZ /web
[root@centos74 files]# mkdir /web
[root@centos74 files]# touch /web/file{1,2,3}
[root@centos74 files]# ls -dZ /web
drwxr-xr-x. root root unconfined_u:object_r:default_t:s0 /web
[root@centos74 files]# ls -lZ /web
-rw-r--r--. root root unconfined_u:object_r:default_t:s0 file1
-rw-r--r--. root root unconfined_u:object_r:default_t:s0 file2
-rw-r--r--. root root unconfined_u:object_r:default_t:s0 file3
接下来用root用户运行下面的命令将/web目录和它里面的文件的类型改为：httpd_sys_content_t。命令如下：
semanage fcontext -a -t httpd_sys_content_t "/web(/.*)?"
-a 添加新记录
-t 定义类型（httpd_sys_content_t）
"/web(/.*)?" 正在表达式会导致semanage作用于/web/以及它里面的文件。
注意：运行这个命令不会直接改变类型。它只是将下述入口加入到文件/etc/selinux/targeted/contexts/files/file_contexts.local里面：
[root@centos74 files]# more /etc/selinux/targeted/contexts/files/file_contexts.local
[root@centos74 files]# semanage fcontext -a -t httpd_sys_content_t "/web(/.*)?"
[root@centos74 files]# ls -dZ /web
drwxr-xr-x. root root unconfined_u:object_r:default_t:s0 /web
[root@centos74 files]# ls -lZ /web
-rw-r--r--. root root unconfined_u:object_r:default_t:s0 file1
-rw-r--r--. root root unconfined_u:object_r:default_t:s0 file2
-rw-r--r--. root root unconfined_u:object_r:default_t:s0 file3
[root@centos74 files]# more /etc/selinux/targeted/contexts/files/file_contexts.local
# This file is auto-generated by libsemanage
# Do not edit directly.

/web(/.*)?    system_u:object_r:httpd_sys_content_t:s0

可以看到命令执行后/etc/selinux/targeted/contexts/files/file_contexts.local文件中多了一行：
/web(/.*)?    system_u:object_r:httpd_sys_content_t:s0

接下来运行：
restorecon -R -v /web就可以递归地改变/web以及它里面文件的内容了。
-R 递归
[root@centos74 files]# restorecon -R -v /web
restorecon reset /web context unconfined_u:object_r:default_t:s0->unconfined_u:object_r:httpd_sys_content_t:s0
restorecon reset /web/file1 context unconfined_u:object_r:default_t:s0->unconfined_u:object_r:httpd_sys_content_t:s0
restorecon reset /web/file2 context unconfined_u:object_r:default_t:s0->unconfined_u:object_r:httpd_sys_content_t:s0
restorecon reset /web/file3 context unconfined_u:object_r:default_t:s0->unconfined_u:object_r:httpd_sys_content_t:s0

删除一个自己添加的context：
semanage fcontext -d "/web(/.*)?"
上述命令删除一个selinux context。如果context是一个正则表达式，需要用引号包围它。
[root@centos74 files]# more /etc/selinux/targeted/contexts/files/file_contexts.local
# This file is auto-generated by libsemanage
# Do not edit directly.

/web(/.*)?    system_u:object_r:httpd_sys_content_t:s0
[root@centos74 files]# semanage fcontext -d "/web(/.*)?"
[root@centos74 files]# more /etc/selinux/targeted/contexts/files/file_contexts.local
# This file is auto-generated by libsemanage
# Do not edit directly.

可以看到/etc/selinux/targeted/contexts/files/file_contexts.local的相应内容被删除。
[root@centos74 files]# ls -dZ /web
drwxr-xr-x. root root unconfined_u:object_r:httpd_sys_content_t:s0 /web
[root@centos74 files]# ls -lZ /web
-rw-r--r--. root root unconfined_u:object_r:httpd_sys_content_t:s0 file1
-rw-r--r--. root root unconfined_u:object_r:httpd_sys_content_t:s0 file2
-rw-r--r--. root root unconfined_u:object_r:httpd_sys_content_t:s0 file3
[root@centos74 files]# restorecon -R -v /web
restorecon reset /web context unconfined_u:object_r:httpd_sys_content_t:s0->unconfined_u:object_r:default_t:s0
restorecon reset /web/file1 context unconfined_u:object_r:httpd_sys_content_t:s0->unconfined_u:object_r:default_t:s0
restorecon reset /web/file2 context unconfined_u:object_r:httpd_sys_content_t:s0->unconfined_u:object_r:default_t:s0
restorecon reset /web/file3 context unconfined_u:object_r:httpd_sys_content_t:s0->unconfined_u:object_r:default_t:s0




SELinux 全称 Security Enhanced Linux (安全强化 Linux)，是 MAC (Mandatory Access Control，强制访问控制系统)的一个实现，
目的在于明确的指明某个进程可以访问哪些资源(文件、网络端口等)。强制访问控制系统的用途在于增强系统抵御 0-Day 攻击(利用尚未公开的漏洞实现的攻击行为)的能力。
所以它不是网络防火墙或 ACL 的替代品，在用途上也不重复。

了解和配置 SELinux

1. 获取当前 SELinux 运行状态
getenforce
可能返回结果有三种：Enforcing、Permissive 和 Disabled。
Disabled 代表 SELinux 被禁用，Permissive 代表仅记录安全警告但不阻止可疑行为，Enforcing 代表记录警告且阻止可疑行为。

2. 改变 SELinux 运行状态
setenforce [ Enforcing | Permissive | 1 | 0 ]
该命令可以立刻改变 SELinux 运行状态，在 Enforcing 和 Permissive 之间切换，结果保持至关机。
一个典型的用途是看看到底是不是 SELinux 导致某个服务或者程序无法运行。若是在 setenforce 0 之后服务或者程序依然无法运行，
那么就可以肯定不是 SELinux 导致的。

3. SELinux 运行策略
配置文件 /etc/sysconfig/selinux 还包含了 SELinux 运行策略的信息，通过改变变量 SELINUXTYPE的值实现，
该值有两种可能：targeted 代表仅针对预制的几种网络服务和访问请求使用 SELinux 保护，strict 代表所有网络服务和访问请求都要经过 SELinux。
若是想自己编辑 SELinux 策略，也提供了命令行下的策略编辑器 seedit 以及 Eclipse 下的编辑插件 eclipse-slide 。

yum -y install setroubleshoot

