|-----------------------------------------------------------------------------------|
| OSI七层网络模型                           |   TCP/IP四层概念模型   |  对应网络协议                                                                                                |
|-----------------------------------------------------------------------------------|
|应用层（Application）          |                  |  TFTP, FTP, NFS, WAIS                    |
|表示层（Presentation）       |     应用层                           |  Telnet, Rlogin, SNMP, Gopher            |
|会话层（Session）                      |                  |  SMTP, DNS                               |
|-----------------------------------------------------------------------------------|
|传输层（Transport）                |     传输层                           |  TCP, UDP                                |
|-----------------------------------------------------------------------------------|
|网络层（Network）                      |     网际层                           |  IP, ICMP, ARP, RARP, AKP, UUCP          |
|-----------------------------------------------------------------------------------|
|数据链路层（Data Link）        |     网络接口                       |  FDDI, Ethernet, Arpanet, PDN, SLIP, PPP |
|物理层（Physical）                   |                  |  IEEE 802.1A，IEEE 802.2到IEEE 802.11      |
|-----------------------------------------------------------------------------------|

使用TCP/IP协议的应用程序通常采用两种应用编程接口（ A P I）：socket和TLI（传输层接口：Transport Layer Interface）。

ARP(Address Resolution Protocol)：地址解析协议。

RARP(Reverse Address Resolution Protocol)： 反向地址转换协议（RARP）允许局域网的物理机器从网关服务器的 ARP表或者缓存上请求其 IP地址。

Loopback Interface（环回接口）：允许运行在同一台主机上的客户程序和服务器程序通过TCP/IP进行通信。
A类网络号127就是为环回接口预留的。
根据惯例，大多数系统把IP地址127.0.0.1分配给这个接口，并命名为localhost。一个传给环回接口的ip数据报不能在任何网络上出现。

TTL（time-to-live）：生存时间。设置了数据报可以经过的最多路由器数。它指定了数据
报的生存时间。T T L的初始值由源主机设置（通常为3 2或6 4），一旦经过一个处理它的路由器，
它的值就减去1。当该字段的值为0时，数据报就被丢弃，并发送I C M P报文通知源主机。

ip路由表：I P层在内存中有一个路由表。当收到一份数据报并进行发送时，它都要对该表搜索一次。

IP路由选择是逐跳（hop-by-hop）进行的。
I P路由选择主要完成以下这些功能：
1) 搜索路由表，寻找能与目的I P地址完全匹配的表目（网络号和主机号都要匹配）。如果
找到，则把报文发送给该表目指定的下一站路由器或直接连接的网络接口（取决于标志字段的值）。
2) 搜索路由表，寻找能与目的网络号相匹配的表目。如果找到，则把报文发送给该表目
指定的下一站路由器或直接连接的网络接口（取决于标志字段的值）。目的网络上的所
有主机都可以通过这个表目来处置。例如，一个以太网上的所有主机都是通过这种表目进行寻径的。
这种搜索网络的匹配方法必须考虑可能的子网掩码。
3) 搜索路由表，寻找标为“默认（ default）”的表目。如果找到，则把报文发送给该表目
指定的下一站路由器。
如果上面这些步骤都没有成功，那么该数据报就不能被传送。如果不能传送的数据报来自
本机，那么一般会向生成数据报的应用程序返回一个“主机不可达”或“网络不可达”的错误。

tcp连接的建立（三次握手）：
1) 请求端（通常称为客户）发送一个S Y N段指明客户打算连接的服务器的端口，以及初
始序号（I S N，在这个例子中为1 4 1 5 5 3 1 5 2 1）。这个S Y N段为报文段1。
2) 服务器发回包含服务器的初始序号的S Y N报文段（报文段2）作为应答。同时，将确认
序号设置为客户的I S N加1以对客户的S Y N报文段进行确认。一个S Y N将占用一个序号。
3) 客户必须将确认序号设置为服务器的I S N加1以对服务器的S Y N报文段进行确认（报文段3）。
这三个报文段完成连接的建立。这个过程也称为三次握手（ three-way handshake）。

tcp连接的终止（四次握手）：
终止一个连接要经过4次握手。这由T C P的半关闭（h a l f -
c l o s e）造成的。既然一个T C P连接是全双工（即数据在两个方向上能同时传递），因此每个方
向必须单独地进行关闭。这原则就是当一方完成它的数据发送任务后就能发送一个F I N来终止
这个方向连接。当一端收到一个F I N，它必须通知应用层另一端几经终止了那个方向的数据传
送。发送F I N通常是应用层进行关闭的结果。
收到一个F I N只意味着在这一方向上没有数据流动。一个T C P连接在收到一个F I N后仍能
发送数据。
当服务器收到这个F I N，它发回一个
A C K，确认序号为收到的序号加1。和S Y N一样，一个F I N将占用一个序号。
同时T C P服务器还向应用程序（即丢弃服务器）传送一个文件结束符。接着这个服
务器程序就关闭它的连接，导致它的T C P端发送一个F I N，客户必须发回
一个确认，并将确认序号设置为收到序号加1。