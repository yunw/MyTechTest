1、创建目录：
/data/appdatas/cat
/data/applogs/cat
并保证应用对上面两个目录有读写权限
注：windows系统该目录为运行程序所在盘的根目录

2、在/data/appdatas/cat目录下创建client.xml文件，内容如下：
<?xml version="1.0" encoding="utf-8"?>
<config mode="client" xmlns:xsi="http://www.w3.org/2001/XMLSchema" xsi:noNamespaceSchemaLocation="config.xsd">
    <servers>
        <server ip="10.0.21.67" port="2280" http-port="8080" />
    </servers>
</config>
说明：
servers：cat服务器列表信息
server：cat服务器信息
ip：cat服务器ip地址
port：cat服务器tcp端口
http-port：cat服务器http端口

3、pom.xml引入依赖：
<dependency>
    <groupId>com.dianping.cat</groupId>
    <artifactId>cat-client</artifactId>
    <version>1.3.6</version>
</dependency>
<!-- 可选 -->
<dependency>
    <groupId>com.meiwei.demo</groupId>
    <artifactId>9now-api</artifactId>
    <version>0.0.1-SNAPSHOT</version>
</dependency>

4、配置domain（两种配置，优先读取A配置）
A、创建resources/META-INF/app.properties文件，内容如下：
app.name=web-app-demo  #应用名称

B、创建resources/META-INF/cat/client.xml，内容如下：
<config mode="client" xmlns:xsi="http://www.w3.org/2001/XMLSchema" xsi:noNamespaceSchemaLocation="config.xsd">
    <domain id="web-app-demo"/>
</config>
同时，将config.xsd拷贝到resources/META-INF/cat/目录下

5、创建文件：resources/META-INF/dubbo/com.alibaba.dubbo.rpc.Filter，内容如下（可选，与9now-api配合使用）：
catFor9nowConsumerFilter=com.meiwei.demo.dubbo.filter.CatFor9nowConsumerFilter
catFor9nowProviderFilter=com.meiwei.demo.dubbo.filter.CatFor9nowProviderFilter

6、web.xml中添加过滤器（可选）：
<filter>
        <filter-name>cat-filter</filter-name>
        <filter-class>com.dianping.cat.servlet.CatFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>cat-filter</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
        <dispatcher>FORWARD</dispatcher>
    </filter-mapping>
    
7、log4j集成：
<appender name="catAppender" class="com.dianping.cat.log4j.CatAppender" />

8、aop配置（以下为举例，每个项目需要根据实际情况修改）：
    <aop:config>
        <aop:aspect id="redisAspect" ref="redisAop">
            <aop:pointcut id="redispc"
                          expression="execution(* cn.mwee.utils.cache.RedisTemplateUtil.*(..))"/>
            <aop:around method="around" pointcut-ref="redispc"/>
        </aop:aspect>
    </aop:config>
    
    注：redisAop对应：cn.mwee.service.paidui.utils.RedisAop
    具体代码如下：
package cn.mwee.service.paidui.utils;

import com.dianping.cat.Cat;
import com.dianping.cat.message.Transaction;
import org.aspectj.lang.ProceedingJoinPoint;
import org.springframework.stereotype.Component;

@Component("redisAop")
public class RedisAop {

    public Object around(ProceedingJoinPoint point) throws Throwable {
        String methodName = point.getSignature().getName();
        Transaction t = Cat.newTransaction("Cache.Redis", "redis");
        Object result = null;
        try {
            String args = "";
            if (point.getArgs() != null) {
                for (Object o : point.getArgs()) {
                    args += o.toString() + ", ";
                }
            }
            Cat.logEvent("Cache.Method", methodName);
            Cat.logEvent("Cache.Args", args.substring(0, args.lastIndexOf(",")));
            result = point.proceed();
            t.setStatus(Transaction.SUCCESS);
        } catch (Exception e) {
            t.setStatus("ERROR");
            Cat.logError(e);
        } finally {
            t.complete();
        }
        return result;
    }

}

9、代码（查看：com.dianping.cat.Cat）：
Cat.logMetricForCount("RestrantCount", 1);
