springboot resteasy: http://blog.csdn.net/dfsdffe/article/details/52101691


spring事务核心接口：org.springframework.transaction.PlatformTransactionManager

注册bean定义:
org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition
创建bean实例：
org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean

spring资源加载：
PathMatchingResourcePatternResolver加载jar文件
was以“wsjar：file:”开头
其他服务器以“jar:file:”开头

父上下文：
spring parent context: ApplicationContext org.springframework.web.context.ContextLoader.loadParentContext(ServletContext servletContext)
加载父上下文的主要原因是：允许多个root web application context作为一个共享的ear context的孩子，或者让相同的父上下文对ejb可见。对于单纯的web appliction来说，不用担心有没有父上下文。

单例bean注册器：
org.springframework.beans.factory.support.DefaultSingletonBeanRegistry
注册所有单例，通过bean name访问。

spring-quartz:

delete from qrtz_cron_triggers;
delete from qrtz_triggers;
delete from qrtz_job_details;

delete from qrtz_blob_triggers;
delete from qrtz_calendars;
delete from qrtz_fired_triggers;
delete from qrtz_locks;
delete from qrtz_paused_trigger_grps;
delete from qrtz_scheduler_state;
delete from qrtz_simple_triggers;
delete from qrtz_simprop_triggers;

select * from qrtz_cron_triggers;
select * from qrtz_triggers;
select * from qrtz_job_details;

select * from qrtz_blob_triggers;
select * from qrtz_calendars;
select * from qrtz_fired_triggers;
select * from qrtz_locks;
select * from qrtz_paused_trigger_grps;
select * from qrtz_scheduler_state;
select * from qrtz_simple_triggers;
select * from qrtz_simprop_triggers;


使用RequestMappingHandlerMapping，就要使用<mvc:annotation-driven/>不然会报错:
No adapter for handler [xx.xx.xx.XxController@dbb9b9]: 
The DispatcherServlet configuration needs to include a HandlerAdapter that supports this handler

spring启动：
servlet容器（tomcat）启动的时候会加载web.xml中的监听器（调用监听器的contextInitialized(ServletContextEvent event)方法）。
第一步：根据web.xml中配置的监听器org.springframework.web.context.ContextLoaderListener（或其子类），ContextLoaderListener是ContextLoader的子类。
ContextLoader类加载的时候，以静态块的方式加载：spring-web-xxx.jar的org.springframework.web.context包下有个ContextLoader.properties文件。
获取contextClassName为：org.springframework.web.context.support.XmlWebApplicationContext，该类不应该由开发者定制。
spring实例化该类作为spring的Root WebApplicationContext。
第二步：刷新WebApplicationContext：首先创建DefaultListableBeanFactory。然后加载bean的定义文件（由web.xml文件中的contextConfigLocation定义）