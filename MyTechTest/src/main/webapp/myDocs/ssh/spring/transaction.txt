1、interface TransactionDefinition：定义了spring允许的事务属性。基于与EJB CMT属性相似的事务传播行为。
   A）事务传播行为：
     PROPAGATION_REQUIRED      //需要事务：支持当前事务；如果当前事务不存在，就创建一个新的事务。
     PROPAGATION_SUPPORTS      //支持事务：支持当前事务；如果当前事务不存在，就以非事务方式运行。
     PROPAGATION_MANDATORY     //强制事务：支持当前事务；如果当前事务不存在，抛出异常。
     PROPAGATION_REQUIRES_NEW  //需要新事务：创建一个新事物；如果存在当前事务，挂起它。
     PROPAGATION_NOT_SUPPORTED //不支持事务：不支持当前事务以非事务方式运行；如果存在当前事务，挂起它。
     PROPAGATION_NEVER         //不支持事务：不支持当前事务；如果存在当前事务，抛出异常。
     PROPAGATION_NESTED        //嵌套事务：如果当前事务存在，以嵌套事务的方式运行。
   B）事务隔离级别：
     ISOLATION_READ_UNCOMMITTED  //读未提交：会出现脏读、不可重复读和幻象读
     ISOLATION_READ_COMMITTED    //读已提交：防止脏读；会出现不可重复读和幻象读
     ISOLATION_REPEATABLE_READ   //可重复读：防止脏读、不可重复读；会出现幻象读
     ISOLATION_SERIALIZABLE      //序列化：防止脏读、不可重复读和幻象读
   C）超时时间
     timeout 默认：-1（事务永不过期）
   D）事务名称
                默认值：fully-qualified class name + "." + method name
   E）是否只读事务
   
2、interface TransactionAttribute extends TransactionDefinition
  A）boolean rollbackOn(Throwable ex);
             对于给定异常，是否回滚。只有在适用aop的时候可用。
  B)String getQualifier();
            返回与这个事务属性相关的一个限定值，用于选择一致的事务管理器来处理事务。
            
3、PlatformTransactionManager：这是spring事务的核心接口。
            